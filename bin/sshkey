#!/usr/bin/env bash
set -euo pipefail

env_dir="/var/tmp/sshkey"; readonly env_dir
env_file="$env_dir/env.source"; readonly env_file

function _get_canon_agent_pid() {
  (
    source "$env_file" >/dev/null
    echo "${SSH_AGENT_PID:-}"
  )
  return 0
}

function _get_agent_pids() {
  pgrep ssh-agent
  return 0
}

function _get_non_canon_agent_pids() {
  local canon_agent_pid; canon_agent_pid="$(_get_canon_agent_pid)"
  readonly canon_agent_pid

  local all_agent_pids; all_agent_pids="$(_get_agent_pids)"
  readonly all_agent_pids
  if [ -z "$canon_agent_pid" ]; then
    echo "$all_agent_pids"
  elif [ ! -z "$all_agent_pids" ] &&
       [ "$all_agent_pids" != "$canon_agent_pid" ]; then
    echo "$all_agent_pids" | grep --invert-match "$canon_agent_pid"
  fi
}

function _is_canon_agent_running() {
  local canon_agent_pid; canon_agent_pid="$(_get_canon_agent_pid)"
  readonly canon_agent_pid

  if [ -z "$canon_agent_pid" ]; then
    return 1
  fi

  ps --pid "$canon_agent_pid" >/dev/null
  return "$?"
}

function kill_non_canon_agents() {
  local non_canon_agent_pids
  non_canon_agent_pids="$(_get_non_canon_agent_pids)"
  readonly non_canon_agent_pids
  if [ ! -z "$non_canon_agent_pids" ]; then
    kill "$non_canon_agent_pids"
  fi
}

function seed_agent() {
  (
    source "$env_file" >/dev/null
    if ! ssh-add -l 2>&1 >/dev/null; then
      ssh-add
    fi
  )
  return 0
}

function main() {
  mkdir --parents "$env_dir"
  touch "$env_file"

  kill_non_canon_agents

  if ! _is_canon_agent_running; then
    ssh-agent > "$env_file"
  fi

  seed_agent

  cat "$env_file"
}

main
