#!/usr/bin/env bash
set -euo pipefail

# Use this tool to help manage ssh-agent processes.
#
# sshkey will create a single "canon" agent and kill all other agent processes.
# It will then print the appropriate shell commands to configure your
# environment for the canon agent. Repeated invocation of sshkey will leave the
# canon agent running so you can save yourself from hundreds of errant agents
# running all the time.
#
# Usage:
#   eval $(/path/to/sshkey)

env_dir="/var/tmp/sshkey"
env_file="$env_dir/env.source"
readonly env_dir env_file

function _get_canon_agent_pid() {
  (
    source "$env_file" >/dev/null
    echo "${SSH_AGENT_PID:-}"
  )
  return 0
}

function _get_agent_pids() {
  pgrep ssh-agent
  return 0
}

function _get_non_canon_agent_pids() {
  local canon_agent_pid; canon_agent_pid="$(_get_canon_agent_pid)"
  readonly canon_agent_pid

  local all_agent_pids; all_agent_pids="$(_get_agent_pids)"
  readonly all_agent_pids
  if [ -z "$canon_agent_pid" ]; then
    echo "$all_agent_pids"
  elif [ ! -z "$all_agent_pids" ] &&
       [ "$all_agent_pids" != "$canon_agent_pid" ]; then
    # -v == --invert-match on Linux
    echo "$all_agent_pids" | grep -v "$canon_agent_pid"
  fi
}

function _is_canon_agent_running() {
  local canon_agent_pid; canon_agent_pid="$(_get_canon_agent_pid)"
  readonly canon_agent_pid

  if [ -z "$canon_agent_pid" ]; then
    return 1
  fi

  # -p == --pid on Linux
  ps -p "$canon_agent_pid" | grep -q ssh-agent
  return "$?"
}

function kill_non_canon_agents() {
  local non_canon_agent_pids
  non_canon_agent_pids="$(_get_non_canon_agent_pids)"
  readonly non_canon_agent_pids
  if [ ! -z "$non_canon_agent_pids" ]; then
    echo "$non_canon_agent_pids" | xargs kill
  fi
}

function seed_agent() {
  (
    source "$env_file" >/dev/null
    if ! ssh-add -l 2>&1 >/dev/null; then
      ssh-add
    fi
  )
  return 0
}

function main() {
  # -p == --parents on Linux
  mkdir -p "$env_dir"
  touch "$env_file"

  kill_non_canon_agents

  if ! _is_canon_agent_running; then
    ssh-agent > "$env_file"
  fi

  seed_agent

  cat "$env_file"
}

main
